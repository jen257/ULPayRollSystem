Version 1.0.0 - Initial Implementation
Date: [23/11/2024]

Added
PayrollSystem.java

Designed a PayrollSystem class to manage employees and their payrolls.
Features:
Maintains lists for Staff and Payslip objects.
Allows adding staff with addStaff(Staff staff).
Generates payslips for all employees using generatePayslips(), calculating net pay for each employee and saving payslips.
Supports promotion of full-time staff with promoteFullTimeStaff(String id).
Payslip.java

Introduced a Payslip class to represent payroll information for staff.
Attributes:
staffId to associate payslip with an employee.
date to record the generation date.
grossPay and netPay for salary details.
Methods:
toString() to export payroll details in a readable format.
Staff.java

Created an abstract Staff class as the base for all employee types.
Attributes:
id, name, role (full-time/part-time), salaryScale, and currentPoint for salary level management.
Methods:
Abstract calculateMonthlyPay() for subclasses to implement payroll calculation.
promoteToNextPoint() to increase the employee's salary level.
Getter methods for retrieving staff attributes.
displayDetails() to print employee information.
TaxCalculation.java

Added a utility class to handle tax computations.
Features:
Supports Irish tax calculations with two bands:
20% for income up to €40,000.
40% for income exceeding €40,000.
Implements calculateTax(double grossPay) to return the applicable tax amount.
FullTimeStaff.java

Extended the Staff class to represent full-time employees.
Attributes:
Defined constants for deductions: HEALTH_INSURANCE (€100) and UNION_FEES (€50).
Features:
Implemented calculateMonthlyPay() to compute net salary by calculating gross salary, deductions (including tax), and net salary.
Uses a private calculateTax() method for determining tax based on gross pay.
PartTimeStaff.java

Extended the Staff class to represent part-time employees.
Attributes:
hourlyRate and hoursWork to track hourly wages and hours worked.
Features:
setHoursWork(int hoursWork) to set the number of hours worked by the employee.
Implemented calculateMonthlyPay() to compute salary based on hourly rate and hours worked.
Overridden displayDetails() to print part-time employee details, including hourly rate and hours worked.
